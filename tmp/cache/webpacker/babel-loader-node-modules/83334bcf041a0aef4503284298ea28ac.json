{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n * jQuery Easing v1.4.1 - http://gsgd.co.uk/sandbox/jquery/easing/\n * Open source under the BSD License.\n * Copyright Â© 2008 George McGinley Smith\n * All rights reserved.\n * https://raw.github.com/gdsmith/jquery-easing/master/LICENSE\n*/\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['jquery'], function ($) {\n      return factory($);\n    });\n  } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n    exports = factory(require('jquery'));\n  } else {\n    factory(jQuery);\n  }\n})(function ($) {\n  // Preserve the original jQuery \"swing\" easing as \"jswing\"\n  $.easing.jswing = $.easing.swing;\n  var pow = Math.pow,\n      sqrt = Math.sqrt,\n      sin = Math.sin,\n      cos = Math.cos,\n      PI = Math.PI,\n      c1 = 1.70158,\n      c2 = c1 * 1.525,\n      c3 = c1 + 1,\n      c4 = 2 * PI / 3,\n      c5 = 2 * PI / 4.5; // x is the fraction of animation progress, in the range 0..1\n\n  function bounceOut(x) {\n    var n1 = 7.5625,\n        d1 = 2.75;\n\n    if (x < 1 / d1) {\n      return n1 * x * x;\n    } else if (x < 2 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n  }\n\n  $.extend($.easing, {\n    def: 'easeOutQuad',\n    swing: function swing(x) {\n      return $.easing[$.easing.def](x);\n    },\n    easeInQuad: function easeInQuad(x) {\n      return x * x;\n    },\n    easeOutQuad: function easeOutQuad(x) {\n      return 1 - (1 - x) * (1 - x);\n    },\n    easeInOutQuad: function easeInOutQuad(x) {\n      return x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2;\n    },\n    easeInCubic: function easeInCubic(x) {\n      return x * x * x;\n    },\n    easeOutCubic: function easeOutCubic(x) {\n      return 1 - pow(1 - x, 3);\n    },\n    easeInOutCubic: function easeInOutCubic(x) {\n      return x < 0.5 ? 4 * x * x * x : 1 - pow(-2 * x + 2, 3) / 2;\n    },\n    easeInQuart: function easeInQuart(x) {\n      return x * x * x * x;\n    },\n    easeOutQuart: function easeOutQuart(x) {\n      return 1 - pow(1 - x, 4);\n    },\n    easeInOutQuart: function easeInOutQuart(x) {\n      return x < 0.5 ? 8 * x * x * x * x : 1 - pow(-2 * x + 2, 4) / 2;\n    },\n    easeInQuint: function easeInQuint(x) {\n      return x * x * x * x * x;\n    },\n    easeOutQuint: function easeOutQuint(x) {\n      return 1 - pow(1 - x, 5);\n    },\n    easeInOutQuint: function easeInOutQuint(x) {\n      return x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2;\n    },\n    easeInSine: function easeInSine(x) {\n      return 1 - cos(x * PI / 2);\n    },\n    easeOutSine: function easeOutSine(x) {\n      return sin(x * PI / 2);\n    },\n    easeInOutSine: function easeInOutSine(x) {\n      return -(cos(PI * x) - 1) / 2;\n    },\n    easeInExpo: function easeInExpo(x) {\n      return x === 0 ? 0 : pow(2, 10 * x - 10);\n    },\n    easeOutExpo: function easeOutExpo(x) {\n      return x === 1 ? 1 : 1 - pow(2, -10 * x);\n    },\n    easeInOutExpo: function easeInOutExpo(x) {\n      return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? pow(2, 20 * x - 10) / 2 : (2 - pow(2, -20 * x + 10)) / 2;\n    },\n    easeInCirc: function easeInCirc(x) {\n      return 1 - sqrt(1 - pow(x, 2));\n    },\n    easeOutCirc: function easeOutCirc(x) {\n      return sqrt(1 - pow(x - 1, 2));\n    },\n    easeInOutCirc: function easeInOutCirc(x) {\n      return x < 0.5 ? (1 - sqrt(1 - pow(2 * x, 2))) / 2 : (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2;\n    },\n    easeInElastic: function easeInElastic(x) {\n      return x === 0 ? 0 : x === 1 ? 1 : -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4);\n    },\n    easeOutElastic: function easeOutElastic(x) {\n      return x === 0 ? 0 : x === 1 ? 1 : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(x) {\n      return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2 : pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5) / 2 + 1;\n    },\n    easeInBack: function easeInBack(x) {\n      return c3 * x * x * x - c1 * x * x;\n    },\n    easeOutBack: function easeOutBack(x) {\n      return 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\n    },\n    easeInOutBack: function easeInOutBack(x) {\n      return x < 0.5 ? pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n    },\n    easeInBounce: function easeInBounce(x) {\n      return 1 - bounceOut(1 - x);\n    },\n    easeOutBounce: bounceOut,\n    easeInOutBounce: function easeInOutBounce(x) {\n      return x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2;\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"module"}